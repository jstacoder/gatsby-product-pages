{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/Footer/index.js","webpack:///./gatsby-config.js","webpack:///./src/components/Navi/index.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Meta/index.js","webpack:///./src/components/Adsense/index.js","webpack:///./src/templates/Post/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","lodash_get__WEBPACK_IMPORTED_MODULE_1__","lodash_get__WEBPACK_IMPORTED_MODULE_1___default","templates_Post__WEBPACK_IMPORTED_MODULE_2__","components_Meta__WEBPACK_IMPORTED_MODULE_3__","components_Layout__WEBPACK_IMPORTED_MODULE_4__","BlogIndex","_ref","data","location","posts","get","a","createElement","site","map","_ref2","i","post","options","isIndex","key","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","Footer","author","title","className","module","exports","siteMetadata","description","siteUrl","twitter","adsense","pathPrefix","plugins","resolve","path","__dirname","name","maxWidth","linkImagesToOriginal","wrapperStyle","short_name","homepage_url","start_url","background_color","theme_color","display","icons","src","sizes","type","trackingId","mergeSecurityHeaders","mergeLinkHeaders","mergeCachingHeaders","Navi","render","_this$props","this","props","react_default","gatsby_browser_entry","to","pathname","React","Component","Layout","componentDidMount","emergence","init","componentDidUpdate","children","components_Navi","Object","assign","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","lodash_get__WEBPACK_IMPORTED_MODULE_2__","lodash_get__WEBPACK_IMPORTED_MODULE_2___default","Meta","siteTitle","meta","content","property","Adsense","clientId","window","adsbygoogle","push","slotId","format","style","data-ad-client","data-ad-slot","data-ad-format","getAd","Post","_data$frontmatter","frontmatter","category","tags","date","image","html","isMore","match","fixed","boxShadow","dateTime","Badges","items","primary","gatsby_image_default","margin","dangerouslySetInnerHTML","__html","getDescription","Button","label","components_Adsense","body","replace","split","_ref3","item"],"mappings":"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","file":"component---src-pages-index-js-aa83b0e3d35a6e6ddda6.js","sourcesContent":["import { graphql } from 'gatsby'\nimport React from 'react'\nimport get from 'lodash/get'\n\nimport Post from 'templates/Post'\nimport Meta from 'components/Meta'\nimport Layout from 'components/Layout'\n\nconst BlogIndex = ({ data, location }) => {\n  const posts = get(data, 'remark.posts')\n  return (\n    <Layout location={location}>\n      <Meta site={get(data, 'site.meta')} />\n      {posts.map(({ post }, i) => (\n        <Post\n          data={post}\n          options={{\n            isIndex: true,\n          }}\n          key={i}\n        />\n      ))}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      meta: siteMetadata {\n        title\n        description\n        url: siteUrl\n        author\n        twitter\n        adsense\n      }\n    }\n    remark: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      posts: edges {\n        post: node {\n          html\n          frontmatter {\n            layout\n            title\n            path\n            category\n            tags\n            description\n            date(formatString: \"YYYY/MM/DD\")\n            image {\n              childImageSharp {\n                fixed(width: 500) {\n                  ...GatsbyImageSharpFixed_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport './style.scss'\n\nconst Footer = ({ author, title }) => (\n  <div className=\"footer\">\n    <div className=\"container\">\n      <hr className=\"border-primary\" />\n      {/*<p>*/}\n      {/*  {title}*/}\n      {/*  <Link to=\"/profile/\">*/}\n      {/*    <br />*/}\n      {/*    <strong>{author}</strong> on Profile*/}\n      {/*  </Link>*/}\n      {/*</p>*/}\n    </div>\n  </div>\n)\n\nexport default Footer\n","module.exports = {\n  siteMetadata: {\n    title: 'Your Store',\n    description: 'Gatsby starter for a store',\n    siteUrl: 'https://gatstrap.netlify.com',\n    author: 'jstacoder',\n    twitter: 'jstacoder',\n    adsense: '',\n  },\n  pathPrefix: '/',\n  plugins: [\n    {\n      resolve: 'gatsby-source-filesystem',\n      options: {\n        path: `${__dirname}/content/posts/`,\n        name: 'posts',\n      },\n    },\n    {\n      resolve: 'gatsby-source-filesystem',\n      options: {\n        path: `${__dirname}/content/images/`,\n        name: 'images',\n      },\n    },\n    {\n      resolve: 'gatsby-source-filesystem',\n      options: {\n        path: `${__dirname}/content/products/`,\n        name: 'products',\n      },\n    },\n    {\n      resolve: 'gatsby-transformer-remark',\n      options: {\n        plugins: [\n          {\n            resolve: 'gatsby-remark-images',\n            options: {\n              maxWidth: 750,\n              linkImagesToOriginal: false,\n              wrapperStyle: 'margin-bottom: 1.0725rem;',\n            },\n          },\n          {\n            resolve: 'gatsby-remark-responsive-iframe',\n            options: {\n              wrapperStyle: 'margin-bottom: 1.0725rem',\n            },\n          },\n          'gatsby-remark-prismjs',\n          'gatsby-remark-copy-linked-files',\n          'gatsby-remark-smartypants',\n        ],\n      },\n    },\n    {\n      resolve: `gatsby-plugin-manifest`,\n      options: {\n        name: 'Gatstrap',\n        short_name: 'Gatstrap',\n        description: 'Gatsby starter for bootstrap a blog',\n        homepage_url: 'https://gatstrap.netlify.com',\n        start_url: '/',\n        background_color: '#fff',\n        theme_color: '#673ab7',\n        display: 'standalone',\n        icons: [\n          {\n            src: '/img/android-chrome-192x192.png',\n            sizes: '192x192',\n            type: 'image/png',\n          },\n          {\n            src: '/img/android-chrome-512x512.png',\n            sizes: '512x512',\n            type: 'image/png',\n          },\n        ],\n      },\n    },\n    {\n      resolve: 'gatsby-plugin-google-analytics',\n      options: {\n        trackingId: '',\n      },\n    },\n    {\n      resolve: 'gatsby-plugin-netlify',\n      options: {\n        mergeSecurityHeaders: true,\n        mergeLinkHeaders: true,\n        mergeCachingHeaders: true,\n      },\n    },\n    'gatsby-plugin-catch-links',\n    'gatsby-plugin-offline',\n    'gatsby-plugin-react-helmet',\n    'gatsby-plugin-react-next',\n    'gatsby-plugin-sass',\n    'gatsby-plugin-sharp',\n    'gatsby-plugin-sitemap',\n    'gatsby-plugin-twitter',\n    'gatsby-transformer-sharp',\n    'gatsby-transformer-yaml',\n    'gatsby-transformer-json',\n  ],\n}\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nclass Navi extends React.Component {\n  render() {\n    const { location, title } = this.props\n    return (\n      <nav className=\"navbar navbar-expand navbar-dark flex-column flex-md-row bg-primary\">\n        <div className=\"container\">\n          <Link className=\"text-center\" to=\"/\">\n            <h1 className=\"navbar-brand mb-0\">{title}</h1>\n          </Link>\n          <div className=\"navbar-nav-scroll\">\n            <ul className=\"navbar-nav bd-navbar-nav flex-row\">\n              <li\n                className={\n                  location.pathname === '/' ? 'nav-item active' : 'nav-item'\n                }\n              >\n                <Link to=\"/\" className=\"nav-link\">\n                  Home\n                </Link>\n              </li>\n              <li\n                className={\n                  location.pathname === '/profile/'\n                    ? 'nav-item active'\n                    : 'nav-item'\n                }\n              >\n                <Link to=\"/profile/\" className=\"nav-link\">\n                  Profile\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <div className=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\" />\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default Navi\n","import React from 'react'\nimport emergence from 'emergence.js'\n\nimport Navi from 'components/Navi'\nimport Footer from 'components/Footer'\nimport { siteMetadata } from '../../../gatsby-config'\n\nimport 'modern-normalize/modern-normalize.css'\nimport 'prismjs/themes/prism.css'\nimport 'scss/gatstrap.scss'\nimport 'animate.css/animate.css'\nimport 'font-awesome/css/font-awesome.css'\n\nclass Layout extends React.Component {\n  componentDidMount() {\n    emergence.init()\n  }\n\n  componentDidUpdate() {\n    emergence.init()\n  }\n\n  render() {\n    const { children } = this.props\n    return (\n      <div>\n        <Navi title={siteMetadata.title} {...this.props} />\n        {children}\n        <Footer title={siteMetadata.title} author={siteMetadata.author} />\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\n\nconst Meta = ({ site, title }) => {\n  const siteTitle = get(site, 'title')\n  title = title ? `${title} | ${siteTitle}` : siteTitle\n  return (\n    <Helmet\n      title={title}\n      meta={[\n        { name: 'twitter:card', content: 'summary' },\n        {\n          name: 'twitter:site',\n          content: `@${get(site, 'twitter')}`,\n        },\n        { property: 'og:title', content: title },\n        { property: 'og:type', content: 'website' },\n        {\n          property: 'og:description',\n          content: get(site, 'description'),\n        },\n        {\n          property: 'og:url',\n          content: `${get(site, 'siteUrl')}/profile`,\n        },\n        {\n          property: 'og:image',\n          content: `${get(site, 'siteUrl')}/img/profile.jpg`,\n        },\n      ]}\n    />\n  )\n}\nexport default Meta\n","import React from 'react'\n\nclass Adsense extends React.Component {\n  componentDidMount() {\n    const { clientId } = this.props\n    if (clientId) {\n      ;(window.adsbygoogle = window.adsbygoogle || []).push({})\n    }\n  }\n\n  render() {\n    const { clientId, slotId, format } = this.props\n\n    return clientId ? (\n      <div className=\"ad\">\n        <ins\n          className=\"adsbygoogle\"\n          style={{ display: 'block' }}\n          data-ad-client={clientId}\n          data-ad-slot={slotId}\n          data-ad-format={format}\n        />\n      </div>\n    ) : (\n      ''\n    )\n  }\n}\nexport default Adsense\n","import { Link } from 'gatsby'\nimport get from 'lodash/get'\nimport React from 'react'\nimport map from 'lodash/map'\nimport Img from 'gatsby-image'\n\nimport Adsense from 'components/Adsense'\nimport Footer from 'components/Footer'\nimport './style.scss'\n\nconst Post = ({ data, options }) => {\n  const {\n    category,\n    tags,\n    description,\n    title,\n    path,\n    date,\n    image,\n  } = data.frontmatter\n  const { isIndex, adsense } = options\n  const html = get(data, 'html')\n  const isMore = isIndex && !!html.match('<!--more-->')\n  const fixed = get(image, 'childImageSharp.fixed')\n\n  return (\n    <div className=\"article\" key={path}>\n      <div className=\"container\">\n        <div className=\"info\">\n          <Link style={{ boxShadow: 'none' }} to={path}>\n            <h1>{title}</h1>\n            <time dateTime={date}>{date}</time>\n          </Link>\n          {Badges({ items: [category], primary: true })}\n          {Badges({ items: tags })}\n        </div>\n        <div className=\"content\">\n          <p>{description}</p>\n          {fixed ? (\n            <Img fixed={fixed} style={{ display: 'block', margin: '0 auto' }} />\n          ) : (\n            ''\n          )}\n        </div>\n        <div\n          className=\"content\"\n          dangerouslySetInnerHTML={{\n            __html: isMore ? getDescription(html) : html,\n          }}\n        />\n        {isMore ? Button({ path, label: 'MORE', primary: true }) : ''}\n        {getAd(isIndex, adsense)}\n      </div>\n    </div>\n  )\n}\n\nexport default Post\n\nconst getAd = (isIndex, adsense) => {\n  return !isIndex ? <Adsense clientId={adsense} slotId=\"\" format=\"auto\" /> : ''\n}\n\nconst getDescription = body => {\n  body = body.replace(/<blockquote>/g, '<blockquote class=\"blockquote\">')\n  if (body.match('<!--more-->')) {\n    body = body.split('<!--more-->')\n    if (typeof body[0] !== 'undefined') {\n      return body[0]\n    }\n  }\n  return body\n}\n\nconst Button = ({ path, label, primary }) => (\n  <Link className=\"readmore\" to={path}>\n    <span\n      className={`btn btn-outline-primary btn-block ${\n        primary ? 'btn-outline-primary' : 'btn-outline-secondary'\n      }`}\n    >\n      {label}\n    </span>\n  </Link>\n)\n\nconst Badges = ({ items, primary }) =>\n  map(items, (item, i) => {\n    return (\n      <span\n        className={`badge ${primary ? 'badge-primary' : 'badge-secondary'}`}\n        key={i}\n      >\n        {item}\n      </span>\n    )\n  })\n"],"sourceRoot":""}